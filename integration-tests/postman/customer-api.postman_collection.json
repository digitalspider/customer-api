{
	"info": {
		"_postman_id": "7ee1fe97-d35a-47ff-ac4d-4126c6d31e8e",
		"name": "customer-api",
		"description": "Digital Spider Customers APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "customer",
			"item": [
				{
					"name": "init",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
											"});\r",
											"\r",
											"const responseObj = pm.response.json();\r",
											"pm.test(\"Response body\", function () {\r",
											"    pm.expect(responseObj).to.be.an(\"object\");\r",
											"    pm.expect(responseObj).to.have.property(\"token\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches schema\", function () {\r",
											"  let schema = {\r",
											"    type: \"object\",\r",
											"    properties: {\r",
											"      token: { type: \"string\" },\r",
											"    },\r",
											"    required: [\r",
											"      \"token\",\r",
											"    ],\r",
											"  };\r",
											"  pm.expect(responseObj).to.be.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"const { token } = responseObj || {};\r",
											"if (token) {\r",
											"    pm.globals.set('token', token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								},
								"description": "Login to get a JWT"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request couldn't be parsed or validated",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"aute magna\",\n \"timestamp\": \"2012-09-09T09:50:13.703Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ea\"\n}"
								}
							]
						},
						{
							"name": "Create Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseObj = pm.response.json();\r",
											"const { id } = responseObj || {};\r",
											"if (id) {\r",
											"    pm.collectionVariables.set('customerId', id);\r",
											"}\r",
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"pm.test(\"Item Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('customerId'));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test@test.com\",\n    \"type\": \"type\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"mobileNumber\": \"0411222333\",\n    \"deviceId\": \"deviceId\",\n    \"deviceOs\": \"deviceOs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									]
								},
								"description": "Creates a new customer"
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								}
							]
						},
						{
							"name": "List Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"pm.test(\"Item Count\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.total).to.be.gte(1);\r",
											"});\r",
											"pm.test(\"Item Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.self.data.length).to.be.gte(1);\r",
											"    pm.expect(jsonData.self.data[jsonData.self.data.length-1].id).to.eql(pm.collectionVariables.get('customerId'));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									]
								},
								"description": "Provide a searchable list of customers"
							},
							"response": [
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"tenantId\": \"eEpsFFD\",\n  \"id\": \"lEE\",\n  \"type\": \"recipient\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test.user@digitalspider.com.au\",\n  \"mobileNumber\": \"<string>\",\n  \"deviceId\": \"1234\",\n  \"deviceOs\": \"Windows/XP\"\n },\n {\n  \"tenantId\": \"dcDWY\",\n  \"id\": \"X2AF\",\n  \"type\": \"recipient\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test.user@digitalspider.com.au\",\n  \"mobileNumber\": \"<string>\",\n  \"deviceId\": \"1234\",\n  \"deviceOs\": \"Windows/XP\"\n }\n]"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{uuid}",
					"item": [
						{
							"name": "Get Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"pm.test(\"Item Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('customerId'));\r",
											"    pm.expect(jsonData.createdAt).to.exist;\r",
											"    pm.expect(jsonData.createdBy).to.exist;\r",
											"    pm.expect(jsonData.payload).to.exist;\r",
											"    pm.expect(jsonData.payload.email).to.eql('test@test.com');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{customerId}}",
											"description": "(Required) The id of the customer"
										}
									]
								},
								"description": "Get details of the customer"
							},
							"response": [
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"tenantId\": \"rxftNRMfE\",\n \"id\": \"u\",\n \"type\": \"recipient\",\n \"firstName\": \"Test\",\n \"lastName\": \"User\",\n \"email\": \"test.user@digitalspider.com.au\",\n \"mobileNumber\": \"<string>\",\n \"deviceId\": \"1234\",\n \"deviceOs\": \"Windows/XP\"\n}"
								}
							]
						},
						{
							"name": "Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"pm.test(\"Item Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('customerId'));\r",
											"    pm.expect(jsonData.createdAt).to.exist;\r",
											"    pm.expect(jsonData.createdBy).to.exist;\r",
											"    pm.expect(jsonData.updatedAt).to.exist;\r",
											"    pm.expect(jsonData.updatedBy).to.exist;\r",
											"    pm.expect(jsonData.payload).to.exist;\r",
											"    pm.expect(jsonData.payload.email).to.eql('test2@test.com');\r",
											"    pm.expect(jsonData.payload.firstName).to.eql('fname');\r",
											"    pm.expect(jsonData.payload.lastName).to.eql('lname');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test2@test.com\",\n    \"firstName\": \"fname\",\n    \"lastName\": \"lname\",\n    \"mobileNumber\": \"mob\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{customerId}}",
											"description": "(Required) The id of the customer"
										}
									]
								},
								"description": "Update an existing customer"
							},
							"response": [
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"tenantId\": \"eEpsFFD\",\n  \"id\": \"lEE\",\n  \"type\": \"recipient\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test.user@digitalspider.com.au\",\n  \"mobileNumber\": \"<string>\",\n  \"deviceId\": \"1234\",\n  \"deviceOs\": \"Windows/XP\"\n },\n {\n  \"tenantId\": \"dcDWY\",\n  \"id\": \"X2AF\",\n  \"type\": \"recipient\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test.user@digitalspider.com.au\",\n  \"mobileNumber\": \"<string>\",\n  \"deviceId\": \"1234\",\n  \"deviceOs\": \"Windows/XP\"\n }\n]"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"test.user@digitalspider.com.au\",\n    \"type\": \"recipient\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"mobileNumber\": \"<string>\",\n    \"deviceId\": \"1234\",\n    \"deviceOs\": \"Windows/XP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Detete Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{customerId}}",
											"description": "(Required) The id of the customer"
										}
									]
								},
								"description": "Delete an existing customer"
							},
							"response": [
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								}
							]
						},
						{
							"name": "Get Customer Post Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(404);\r",
											"});\r",
											"pm.test(\"Item Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql('Item not found');\r",
											"    pm.expect(jsonData.status).to.eql(404);\r",
											"    pm.expect(jsonData.awsRequestId).to.exist;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":uuid"
									],
									"variable": [
										{
											"description": "(Required) The id of the customer",
											"key": "uuid",
											"value": "{{customerId}}"
										}
									]
								},
								"description": "Get details of the customer"
							},
							"response": [
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"tenantId\": \"rxftNRMfE\",\n \"id\": \"u\",\n \"type\": \"recipient\",\n \"firstName\": \"Test\",\n \"lastName\": \"User\",\n \"email\": \"test.user@digitalspider.com.au\",\n \"mobileNumber\": \"<string>\",\n \"deviceId\": \"1234\",\n \"deviceOs\": \"Windows/XP\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"Unauthorized\"\n}"
								},
								{
									"name": "The specified resource was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								},
								{
									"name": "There was an error with the request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"qui\",\n \"timestamp\": \"2000-08-09T10:55:29.879Z\",\n \"code\": \"ERR_00002\",\n \"level\": \"Error\",\n \"details\": \"ut quis cillum magna\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "{{3KEYS_BASE_URL}}"
		}
	]
}